question 1 :- Source letcode.com
Given the roots of two binary trees p and q, write a function to check if they are the same or not.

Two binary trees are considered the same if they are structurally identical, and the nodes have the same value.

 

Example 1:


Input: p = [1,2,3], q = [1,2,3]
Output: true
Example 2:


Input: p = [1,2], q = [1,null,2]
Output: false
Example 3:


Input: p = [1,2,1], q = [1,1,2]
Output: false
 

Constraints:

The number of nodes in both trees is in the range [0, 100].
-104 <= Node.val <= 104

solution :
            i first created a function that converts the tree to an array, the function takes two 
            arguments. that is the root and an empty array. I use a recursive function to push all 
            the items in the tree to the array.

            then i created the isSameTree function to check if two trees are equal. this function takes in 
            two arguments, that is the two trees to compare. i declear two empty arrays. then i use the 
            treeToArray method to convert the trees to array. i used the JSON.Stringify method to convert the 
            two arrays into values to be compared. if the two arrays are equal the function returns true, else 
            it returns false.
